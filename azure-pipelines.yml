trigger:
    - main # Adjust to the branch you want to trigger the build

variables:
    environmentName: "dev"
    vmImage: "ubuntu-latest"
    npm_config_cache: $(Pipeline.Workspace)/.npm
    azureServiceConnection: "SkyOps_Service" # Define your Azure service connection name
    appServiceName: "SkyOpsUI" # Your Azure App Service name
    resourceGroupName: "SkyOps" # Azure resource group where your App Service is located
    nodeVersion: "20.x" # Define the Node.js version to use

stages:
    - stage: Build
      displayName: Build stage
      jobs:
          - job: Build
            displayName: Build
            pool:
                vmImage: $(vmImage)

            steps:
                - task: NodeTool@0
                  inputs:
                      versionSpec: $(nodeVersion)
                  displayName: "Install Node.js"

                - task: Cache@2
                  inputs:
                      key: npm | "$(Agent.OS)"
                      restoreKeys: |
                          npm | "$(Agent.OS)"
                      path: $(npm_config_cache)
                  displayName: "Cache npm"

                - script: npm i
                  displayName: "Install node_modules"

                - task: Cache@2
                  inputs:
                      key: next | "$(Agent.OS)"
                      path: "$(System.DefaultWorkingDirectory)/build/cache"
                  displayName: "Cache .next/cache"

                - script: |
                      echo "Listing files before build"
                      ls -la
                  displayName: "List files before build"

                - script: npm run build
                  displayName: "Build"

                - script: mv ./public ./build/standalone/ && mkdir build/standalone/public/_next && mv ./build/static ./build/standalone/public/_next/static

                - script: |
                      echo "Listing files after build"
                      ls -la
                  displayName: "List files after build"

                - task: ArchiveFiles@2
                  inputs:
                      rootFolderOrFile: "$(System.DefaultWorkingDirectory)/build/standalone"
                      includeRootFolder: false
                      archiveType: "zip"
                      archiveFile: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
                      replaceExistingArchive: true

                - task: PublishBuildArtifacts@1
                  inputs:
                      PathtoPublish: "$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip"
                      ArtifactName: "drop"

    - stage: Deploy
      displayName: Deploy stage
      dependsOn: Build
      condition: succeeded()

      jobs:
          - deployment: Deploy
            displayName: Deploy
            environment: $(environmentName)
            pool:
                vmImage: $(vmImage)

            strategy:
                runOnce:
                    deploy:
                        steps:
                            - script: |
                                  echo "Listing files in workspace before deployment"
                                  ls -la "$(Pipeline.Workspace)/drop"
                              displayName: "List files before deployment"

                            - task: AzureWebApp@1
                              inputs:
                                  azureSubscription: $(azureServiceConnection)
                                  resourceGroupName: "$(resourceGroupName)"
                                  appType: "webApp"
                                  appName: "$(appServiceName)"
                                  package: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
